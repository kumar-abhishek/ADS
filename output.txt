0 1 7
0 5 14
0 2 9
1 0 7
1 2 10
1 3 15
2 0 9 
2 1 10
2 5 2
2 3 11
3 1 15
3 2 11
3 4 6
4 3 6
4 5 9 
5 4 9 
5 2 2 
5 0 14
*

edges from vertex  0: 2 9       5 14    1 7
edges from vertex  1: 3 15      2 10    0 7
edges from vertex  2: 3 11      5 2     1 10    0 9
edges from vertex  3: 4 6       2 11    1 15
edges from vertex  4: 5 9       3 6
edges from vertex  5: 0 14      2 2     4 9
nVertices is 6 
1st root->data : 0




binomialHeap when k = 0
i= 0 0 0| i= 1 1 99999| i= 2 2 99999| i= 3 3 99999| i= 4 4 99999| i= 5 5 99999| 
removeMin root:0| removeMin distance:  0
 root->sibling->data: 5
 xx: before copying


inside debug functionnew root's data: 0|root->distance: 0
new roots' sibling data : 5|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
before melding


inside debug functionnew root's data: 5|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 3|root->sibling->sibling->distance: 99999
i= 0 0 0| i= 1 1 99999| i= 2 2 99999| i= 3 3 99999| i= 4 4 99999| i= 5 5 99999| 
after melding


inside debug functionnew root's data: 5|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 3|root->sibling->sibling->distance: 99999
before doing pairwise combine 


inside debug functionnew root's data: 5|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 3|root->sibling->sibling->distance: 99999
bheap inside pairwise Combine
root->degree:  1


inside debug functionnew root's data: 5|root->distance: 99999
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 3|root->sibling->distance: 99999
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 99999
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
bheap inside pairwise Combine
root->degree:  1


inside debug functionnew root's data: 3|root->distance: 99999
new root's child data : 2|root->child->distance: 99999
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 5|root->sibling->sibling->distance: 99999
new root's child->sibling->data: 2|root->child->sibling->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 99999
bheap inside pairwise Combine
root->degree:  2


inside debug functionnew root's data: 5|root->distance: 99999
new root's child data : 3|root->child->distance: 99999
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 5|root->sibling->sibling->distance: 99999
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root->child->child data : 2|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 99999
after doing pariwise combine 


inside debug functionnew root's data: 5|root->distance: 99999
new root's child data : 3|root->child->distance: 99999
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 5|root->sibling->sibling->distance: 99999
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root->child->child data : 2|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 99999
i= 0 0 0| i= 1 1 99999| i= 2 2 99999| i= 3 3 99999| 
inside while loopi= 0 0 0| i= 1 1 99999| i= 2 2 99999| i= 3 3 99999| 
for loop  
minIndex is 0

before decrease key: bheap after k=0


inside debug functionnew root's data: 5|root->distance: 99999
new root's child data : 3|root->child->distance: 99999
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 5|root->sibling->sibling->distance: 99999
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root->child->child data : 2|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 99999
here u is: 0 v is : 2w is : 9| heapArray[v]:data:2

root->data 5|t->data 2
deckey n
count: 0
count: 1
inside decrease key function: 


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 99999
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
here u is: 0 v is : 5w is : 14| heapArray[v]:data:5

root->data 2|t->data 5
deckey n
inside decrease key function: 


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 1|root->sibling->distance: 99999
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
here u is: 0 v is : 1w is : 7| heapArray[v]:data:1

root->data 2|t->data 1
inside decrease key function: 


inside debug functionnew root's data: 1|root->distance: 7
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 1|root->sibling->sibling->distance: 7
new root's sibling->child->data: 5|root->sibling->child->distance: 14


distance array is: 0 7 9 99999 99999 14 
bheap after k=0


inside debug functionnew root's data: 1|root->distance: 7
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 1|root->sibling->sibling->distance: 7
new root's sibling->child->data: 5|root->sibling->child->distance: 14



binomialHeap when k = 1
i= 1 1 7| i= 2 2 9| i= 3 3 99999| i= 4 4 99999| i= 5 5 14| 
removeMin root:1| removeMin distance:  7
 root->sibling->data: 2
 xx: before copying


inside debug functionnew root's data: 1|root->distance: 7
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 1|root->sibling->sibling->distance: 7
new root's sibling->child->data: 5|root->sibling->child->distance: 14
before melding


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
i= 1 1 7| i= 2 2 9| i= 3 3 99999| i= 4 4 99999| i= 5 5 14| 
after melding


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
before doing pairwise combine 


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
after doing pariwise combine 


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
i= 1 1 7| i= 2 2 9| i= 3 3 99999| 
i= 1 1 7| i= 2 2 9| i= 3 3 99999| 
for loop  
minIndex is 1

before decrease key: bheap after k=1


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 99999
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
here u is: 1 v is : 3w is : 15| heapArray[v]:data:3

root->data 2|t->data 3
deckey n
inside decrease key function: 


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 22
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
here u is: 1 v is : 2w is : 10| heapArray[v]:data:2
here u is: 1 v is : 0w is : 7

distance array is: 0 7 9 22 99999 14 
bheap after k=1


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 22
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9



binomialHeap when k = 2
i= 2 2 9| i= 3 3 22| i= 4 4 99999| i= 5 5 14| 
removeMin root:2| removeMin distance:  9
 root->sibling->data: 2
 xx: before copying


inside debug functionnew root's data: 2|root->distance: 9
new root's child data : 5|root->child->distance: 14
new roots' sibling data : 2|root->sibling->distance: 9
new root's sibling->sibling->data: 2|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 5|root->sibling->child->distance: 14
new root->child->child data : 3|root->child->child->distance: 22
new root's child->sibling->sibling->data: 2|root->child->sibling->sibling->distance: 9
before melding


inside debug functionnew root's data: 5|root->distance: 14
new root's child data : 3|root->child->distance: 22
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 3|root->child->sibling->distance: 22
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 22
i= 2 0 9| i= 3 3 22| i= 4 4 99999| i= 5 5 14| 
after melding


inside debug functionnew root's data: 5|root->distance: 14
new root's child data : 3|root->child->distance: 22
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 3|root->child->sibling->distance: 22
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 22
before doing pairwise combine 


inside debug functionnew root's data: 5|root->distance: 14
new root's child data : 3|root->child->distance: 22
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 3|root->child->sibling->distance: 22
new root's child->sibling->sibling->data: 3|root->child->sibling->sibling->distance: 22
bheap inside pairwise Combine
root->degree:  1


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
after doing pariwise combine 


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
i= 2 0 9| i= 3 3 22| 
i= 2 0 9| i= 3 3 22| 
for loop  
minIndex is 2

before decrease key: bheap after k=2


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
here u is: 2 v is : 3w is : 11| heapArray[v]:data:3

root->data 0|t->data 3
deckey n
inside decrease key function: 


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
here u is: 2 v is : 5w is : 2| heapArray[v]:data:5

root->data 0|t->data 5
deckey n
inside decrease key function: 


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
here u is: 2 v is : 1w is : 10here u is: 2 v is : 0w is : 9

distance array is: 0 7 9 20 99999 11 
bheap after k=2


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999



binomialHeap when k = 3
i= 3 3 20| i= 4 4 99999| i= 5 5 11| 
removeMin root:0| removeMin distance:  9
 root->sibling->data: 0
 xx: before copying


inside debug functionnew root's data: 0|root->distance: 9
new root's child data : 4|root->child->distance: 99999
new roots' sibling data : 0|root->sibling->distance: 9
new root's sibling->sibling->data: 0|root->sibling->sibling->distance: 9
new root's child->sibling->data: 4|root->child->sibling->distance: 99999
new root's sibling->child->data: 4|root->sibling->child->distance: 99999
new root's child->sibling->sibling->data: 4|root->child->sibling->sibling->distance: 99999
before melding


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
i= 3 3 20| i= 4 4 99999| i= 5 5 11| 
after melding


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
before doing pairwise combine 


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
after doing pariwise combine 


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
i= 3 3 20| 
i= 3 3 20| 
for loop  
minIndex is 0

before decrease key: bheap after k=3


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
here u is: 0 v is : 2w is : 9here u is: 0 v is : 5w is : 14| heapArray[v]:data:5
here u is: 0 v is : 1w is : 7

distance array is: 0 7 9 20 99999 11 
bheap after k=3


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999



binomialHeap when k = 4
i= 3 3 20| i= 4 4 99999| i= 5 5 11| 
removeMin root:4| removeMin distance:  99999
 root->sibling->data: 4
 xx: before copying


inside debug functionnew root's data: 4|root->distance: 99999
new roots' sibling data : 4|root->sibling->distance: 99999
new root's sibling->sibling->data: 4|root->sibling->sibling->distance: 99999
before melding


inside debug functioni= 3 3 20| i= 4 0 99999| i= 5 5 11| 
after melding


inside debug functionbefore doing pairwise combine 


inside debug functionafter doing pariwise combine 


inside debug functioni= 3 3 20| 
i= 3 3 20| 
for loop  
minIndex is 4

before decrease key: bheap after k=4


inside debug functionhere u is: 4 v is : 5w is : 9| heapArray[v]:data:5
here u is: 4 v is : 3w is : 6| heapArray[v]:data:3


distance array is: 0 7 9 20 99999 11 
bheap after k=4


inside debug function


binomialHeap when k = 5
i= 3 3 20| i= 5 5 11| 
